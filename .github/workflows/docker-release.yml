name: diyHue CI Build

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Release Docker Image
    steps:
      - name: Set Docker Repository and Enable Experimental Docker Features 
        run: |
          if [ ${GITHUB_REPOSITORY} == "diyhue/diyHue" ]; then
            export DOCKER_REPO="diyhue/core"
          else
            export DOCKER_REPO=$GITHUB_REPOSITORY
          fi
          export DOCKER_CLI_EXPERIMENTAL="enabled"
          echo "::set-env name=DOCKER_CLI_EXPERIMENTAL::$DOCKER_CLI_EXPERIMENTAL"
          echo "::set-env name=DOCKER_REPO::$DOCKER_REPO"
          echo Docker Experimental Features: $DOCKER_CLI_EXPERIMENTAL
          echo Repository set as: $DOCKER_REPO

      - name: Checkout
        uses: actions/checkout@v1

      - name: Docker login (needs DOCKER_USERNAME and DOCKER_PASSWORD secrets)
        run:
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build docker image (amd64)
        run: |
          docker build -t diyhue/core:ci-amd64 -f ./.build/Dockerfile --build-arg TARGETPLATFORM=linux/amd64 .

      - name: Build docker image (arm)
        run: |
          docker build -t diyhue/core:ci-arm -f ./.build/Dockerfile --build-arg TARGETPLATFORM=linux/arm/v7 .

      - name: Build docker image (arm64)
        run: |
          docker build -t diyhue/core:ci-arm64 -f ./.build/Dockerfile --build-arg TARGETPLATFORM=linux/arm64 .

      - name: Push CI Images
        run: |
          docker push diyhue/core:ci-amd64
          docker push diyhue/core:ci-arm
          docker push diyhue/core:ci-arm64

      - name: Deploy Commit ID
        if: ${{ github.sha != '' }}
        run: |
          docker manifest create \
            $DOCKER_REPO:${GITHUB_REF##*/}-$GITHUB_SHA \
            diyhue/core:ci-amd64 \
            diyhue/core:ci-arm \
            diyhue/core:ci-arm64
          docker manifest annotate $DOCKER_REPO:${GITHUB_REF##*/}-$GITHUB_SHA diyhue/core:ci-amd64 --arch amd64
          docker manifest annotate $DOCKER_REPO:${GITHUB_REF##*/}-$GITHUB_SHA diyhue/core:ci-arm --arch arm --variant v7
          docker manifest annotate $DOCKER_REPO:${GITHUB_REF##*/}-$GITHUB_SHA diyhue/core:ci-arm64 --arch arm64
          docker manifest push $DOCKER_REPO:${GITHUB_REF##*/}-$GITHUB_SHA
          echo $DOCKER_REPO:$GITHUB_SHA published

      - name: Deploy Run Number
        if: ${{ github.sha != '' }}
        run: |
          docker manifest create \
            $DOCKER_REPO:$GITHUB_RUN_NUMBER \
            diyhue/core:ci-amd64 \
            diyhue/core:ci-arm \
            diyhue/core:ci-arm64
          docker manifest annotate $DOCKER_REPO:$GITHUB_RUN_NUMBER diyhue/core:ci-amd64 --arch amd64
          docker manifest annotate $DOCKER_REPO:$GITHUB_RUN_NUMBER diyhue/core:ci-arm --arch arm --variant v7
          docker manifest annotate $DOCKER_REPO:$GITHUB_RUN_NUMBER diyhue/core:ci-arm64 --arch arm64
          docker manifest push $DOCKER_REPO:$GITHUB_RUN_NUMBER
          echo $DOCKER_REPO:$GITHUB_RUN_NUMBER published

      - name: Deploy Latest
        if: ${{ github.ref == 'refs/heads/master' }}
        run: |
          docker manifest create \
            $DOCKER_REPO:latest \
            diyhue/core:ci-amd64 \
            diyhue/core:ci-arm \
            diyhue/core:ci-arm64
          docker manifest annotate $DOCKER_REPO:latest diyhue/core:ci-amd64 --arch amd64
          docker manifest annotate $DOCKER_REPO:latest diyhue/core:ci-arm --arch arm --variant v7
          docker manifest annotate $DOCKER_REPO:latest diyhue/core:ci-arm64 --arch arm64
          docker manifest push $DOCKER_REPO:latest
          echo $DOCKER_REPO:latest published

      - name: Deploy Branch
        if: ${{ startsWith(github.ref, 'refs/heads/') }}
        run: |
          docker manifest create \
            $DOCKER_REPO:${GITHUB_REF##*/} \
            diyhue/core:ci-amd64 \
            diyhue/core:ci-arm \
            diyhue/core:ci-arm64
          docker manifest annotate $DOCKER_REPO:${GITHUB_REF##*/} diyhue/core:ci-amd64 --arch amd64
          docker manifest annotate $DOCKER_REPO:${GITHUB_REF##*/} diyhue/core:ci-arm --arch arm --variant v7
          docker manifest annotate $DOCKER_REPO:${GITHUB_REF##*/} diyhue/core:ci-arm64 --arch arm64
          docker manifest push $DOCKER_REPO:${GITHUB_REF##*/}
          echo $DOCKER_REPO:${GITHUB_REF##*/} published

      - name: Deploy Tag
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          docker manifest create \
            $DOCKER_REPO:${GITHUB_REF##*/} \
            diyhue/core:ci-amd64 \
            diyhue/core:ci-arm \
            diyhue/core:ci-arm64
          docker manifest annotate $DOCKER_REPO:${GITHUB_REF##*/} diyhue/core:ci-amd64 --arch amd64
          docker manifest annotate $DOCKER_REPO:${GITHUB_REF##*/} diyhue/core:ci-arm --arch arm --variant v7
          docker manifest annotate $DOCKER_REPO:${GITHUB_REF##*/} diyhue/core:ci-arm64 --arch arm64
          docker manifest push $DOCKER_REPO:${GITHUB_REF##*/}
          echo $DOCKER_REPO:${GITHUB_REF##*/} published

      - name: Cleanup CI Images
        run: |
          export TOKEN=`curl -s -H "Content-Type: application/json" -X POST -d '{"username": "'${{ secrets.DOCKER_USERNAME }}'", "password": "'${{ secrets.DOCKER_PASSWORD }}'"}' "https://hub.docker.com/v2/users/login/" | jq -r .token`

          curl "https://hub.docker.com/v2/repositories/${DOCKER_REPO}/tags/ci-amd64/" -X DELETE -H "Authorization: JWT ${TOKEN}"
          curl "https://hub.docker.com/v2/repositories/${DOCKER_REPO}/tags/ci-arm/" -X DELETE -H "Authorization: JWT ${TOKEN}"
          curl "https://hub.docker.com/v2/repositories/${DOCKER_REPO}/tags/ci-arm64/" -X DELETE -H "Authorization: JWT ${TOKEN}"

  Test:
    runs-on: ubuntu-latest
    name: Test Image
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Build docker image
        run: |
          docker build -t diyhue/core:ci -f ./.build/Dockerfile --build-arg TARGETPLATFORM=linux/amd64 .
      - name: Run docker image
        if: success()
        run: |
          docker run -d --name "diyhue" --network="host" -v '/mnt/hue-emulator/export/':'/opt/hue-emulator/export/':'rw' -e 'MAC=b8:27:eb:d4:dc:11' -e 'IP=192.168.1.123' -e 'DECONZ=192.168.1.111' -e 'IP_RANGE=5,6' -e 'DEBUG=true' diyhue/core:ci
          sleep 15
          docker logs diyhue
      - name: Cleanup
        run: |
          docker kill diyhue
          docker rm diyhue
